
/* hide radio buttons, custom labels are used instead */
input[type="radio"] {
    position: absolute;
    left: -300px;
    opacity: 0;
    width: 0;
    height: 0;
}
.artwork:not(:target) input[type="radio"]:focus ~ div div img{
	animation-name: rainbow-shadow;
	animation-duration: 1s;
	animation-iteration-count: infinite;
}

body {
	background-image: url("background-gallery.png");
}

a {
	color: #ab2652;
}



/* gallery  */

#gallery-intro {
	text-shadow: -1px 1px 0 #9c284e,
	1px 1px 0 #9c284e,
	1px -1px 0 #9c284e,
	-1px -1px 0 #9c284e,
	-2px 2px 0 #9c284e,
	2px 2px 0 #9c284e,
	2px -2px 0 #9c284e,
	-2px -2px 0 #9c284e;
}

#gallery {
	color: #222222;
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
}

.artwork {
    margin: 50px;
    text-align: center;
	border: 66px solid #f7e0ac;
	border-image: url(gallery-border.png) 66 round;
	background: #f7e0ac;
}


.artwork img {
    height: 10vw;
}

/* hide these in unfocused state */
.gallery-controls,
.artwork-controls label,
.artwork-description,
.artwork:target .artwork-title a 
{
    display: none;
}


/* focused artwork */
.artwork:target {
    position: fixed;
	display: flex;
	flex-direction: column;
	width: 70%;
	height: 60%;
	overflow: auto;
	margin: 0 auto;
	animation-name: unset;
}

.artwork:target .artwork-title {
	order: 1;
}

.artwork:target .gallery-controls {
	order: 3;
}


.artwork:target .artwork-description {
	order: 4;
}
 
/* scales the image in proportion, to a good size */
.artwork:target section img { 
    height: 20vw;
}


/* this are otherwised hidden when unfocused */
.artwork-controls label {
	height: 30px;
    background: #ab2652;
    box-shadow: 0px 0px 0px 4px #efc56c;
	grid-row: 2/3;
}

/* 
 * the artwork uses flexbox, but the artwork-controls in the artwork use grid
 *
 * This is because the images must be directly after the rotational controls in a 
 * logical sense, but to put the images before visually, grid is used
 *
 * each artwork control has its own grid column, which is the easiest way to sort them
 * (flex box would be easier, but as mentioned above, it cant be used)
 * */
.artwork:target .artwork-controls {
	order: 2;
	display: grid;
	grid-template-rows: 5fr 1fr;
	grid-template-columns: 1fr 30px 30px 30px 30px 30px 30px 30px 30px 30px 30px 30px 30px 1fr;
}
.artwork:target .artwork-images {
	grid-row: 1/2;
	grid-column: 1/15;
}
.artwork-controls :nth-child(1) {
	grid-column: 2/3;
}
.artwork-controls :nth-child(2) {
	grid-column: 3/4;
}
.artwork-controls :nth-child(3) {
	grid-column: 4/5;
}
.artwork-controls :nth-child(4) {
	grid-column: 5/6;
}
.artwork-controls :nth-child(5) {
	grid-column: 6/7;
}
.artwork-controls :nth-child(6) {
	grid-column: 7/8;
}
.artwork-controls :nth-child(7) {
	grid-column: 8/9;
}
.artwork-controls :nth-child(8) {
	grid-column: 9/10;
}
.artwork-controls :nth-child(9) {
	grid-column: 10/11;
}
.artwork-controls :nth-child(10) {
	grid-column: 11/12;
}
.artwork-controls :nth-child(11) {
	grid-column: 12/13;
}
.artwork-controls :nth-child(12) {
	grid-column: 13/14;
}

/* show these when artwork is focused */
.artwork:target .gallery-controls,
.artwork:target .artwork-description,
.artwork:target .artwork-controls label 
{
    display:unset;
}

.artwork:target .gallery-controls a {
	display: inline-block;
}


/* display image */

/* hide all images */
.art
{
    display: none;
}

/* 
 * if a artwork controller is hovered or checked, show its
 * corresponding artowrk
 */
.c1:checked  ~ section section .i1,  .l1:hover  ~ section .i1,
.c2:checked  ~ section section .i2,  .l2:hover  ~ section .i2,
.c3:checked  ~ section section .i3,  .l3:hover  ~ section .i3,
.c4:checked  ~ section section .i4,  .l4:hover  ~ section .i4,
.c5:checked  ~ section section .i5,  .l5:hover  ~ section .i5,
.c6:checked  ~ section section .i6,  .l6:hover  ~ section .i6,
.c7:checked  ~ section section .i7,  .l7:hover  ~ section .i7,
.c8:checked  ~ section section .i8,  .l8:hover  ~ section .i8,
.c9:checked  ~ section section .i9,  .l9:hover  ~ section .i9,
.c10:checked ~ section section .i10, .l10:hover ~ section .i10,
.c11:checked ~ section section .i11, .l11:hover ~ section .i11,
.c12:checked ~ section section .i12, .l12:hover ~ section .i12
{
    display: unset;
}

/*
 * when an artwork is hovered, hide all the others 
 * (the one thats currently checked) 
 * */
.l1:hover ~ section  img:not(.i1),
.l2:hover ~ section  img:not(.i2),
.l3:hover ~ section  img:not(.i3),
.l4:hover ~ section  img:not(.i4),
.l5:hover ~ section  img:not(.i5),
.l6:hover ~ section  img:not(.i6),
.l7:hover ~ section  img:not(.i7),
.l8:hover ~ section  img:not(.i8),
.l9:hover ~ section  img:not(.i9),
.l10:hover ~ section img:not(.i10),
.l11:hover ~ section img:not(.i11),
.l12:hover ~ section img:not(.i12)
{
    display: none;
}



/* color of checked label */
.c1:checked ~ section .l1,
.c2:checked ~ section .l2,
.c3:checked ~ section .l3,
.c4:checked ~ section .l4,
.c5:checked ~ section .l5,
.c6:checked ~ section .l6,
.c7:checked ~ section .l7,
.c8:checked ~ section .l8,
.c9:checked ~ section .l9,
.c10:checked ~ section .l10,
.c11:checked ~ section .l11,
.c12:checked ~ section .l12 {
    background: #fff18d;
}

/* color of focused label */
.c1:focus ~ section .l1,
.c2:focus ~ section .l2,
.c3:focus ~ section .l3,
.c4:focus ~ section .l4,
.c5:focus ~ section .l5,
.c6:focus ~ section .l6,
.c7:focus ~ section .l7,
.c8:focus ~ section .l8,
.c9:focus ~ section .l9,
.c10:focus ~ section .l10,
.c11:focus ~ section .l11,
.c12:focus ~ section .l12 {
    z-index: 1;
    box-shadow: 0px 0px 0px 5px #d8ab4e;

}

/* color of hovered label */
.artwork-controls label:hover {
    background: #6d0829;
}




/*
 * when the user closes an art peice, they should focus an invisible div that is fixed
 * to the top of the page, to keep the scroll position, otherwise the page automatically 
 * scrolls up
 */
#keep-scroll {
    position: fixed;
}

* {
	cursor: url("cursor-gallery-default.png"), auto;
}
a, a span, label{
	cursor: url("cursor-gallery-pointer.png") 17 0, auto ;
}










